[{"C:\\Projects\\second_project\\src\\App.js":"1","C:\\Projects\\second_project\\src\\index.js":"2","C:\\Projects\\second_project\\src\\SignUp.js":"3","C:\\Projects\\second_project\\src\\User.js":"4","C:\\Projects\\second_project\\src\\Login.js":"5","C:\\Projects\\second_project\\src\\Edit.js":"6","C:\\Projects\\second_project\\src\\userDashBord.js":"7","C:\\Projects\\second_project\\src\\PrivateRouter.js":"8"},{"size":905,"mtime":1607170740675,"results":"9","hashOfConfig":"10"},{"size":433,"mtime":1606980029811,"results":"11","hashOfConfig":"10"},{"size":9390,"mtime":1607172004788,"results":"12","hashOfConfig":"10"},{"size":7125,"mtime":1607331955455,"results":"13","hashOfConfig":"10"},{"size":3015,"mtime":1607172854404,"results":"14","hashOfConfig":"10"},{"size":147,"mtime":1606979792168,"results":"15","hashOfConfig":"10"},{"size":3348,"mtime":1607171710215,"results":"16","hashOfConfig":"10"},{"size":578,"mtime":1607169211784,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1aeuhq7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\second_project\\src\\App.js",[],["37","38"],"C:\\Projects\\second_project\\src\\index.js",[],["39","40"],"C:\\Projects\\second_project\\src\\SignUp.js",["41","42","43","44","45","46"],"import React, {useEffect, useState} from 'react';\r\nimport {Form, Input, Button, Checkbox, Row, Col, Card, Icon, Radio, Select} from 'antd';\r\nimport {UserOutlined, LockOutlined, MailOutlined} from '@ant-design/icons';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\nconst numOfCountries = [\r\n    // {value: \"\", label: \"Please Select...\"},\r\n    {value: \"India\", label: \"India\"},\r\n    {value: \"America\", label: \"America\"},\r\n    {value: \"Nepal\", label: \"Nepal\"},\r\n    {value: \"Africa\", label: \"Africa\"},\r\n    {value: \"Pakistan\", label: \"Pakistan\"},\r\n];\r\nconst SignUp = (props) => {\r\n    const [userDetails, setUserDetails] = useState({});\r\n    const [list, setList] = useState([]);\r\n    const [isEditable, setEditableIndex] = useState(null);\r\n    const [errors, setValidation] = React.useState({});\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        if (JSON.parse(localStorage.getItem(\"list\")) !== null) {\r\n            data = JSON.parse(localStorage.getItem(\"list\"));\r\n            if (props.match.params.id) {\r\n                const findUser = data.find(user => user.id === parseInt(props.match.params.id));\r\n                if (findUser) {\r\n                    setUserDetails(findUser);\r\n                }\r\n            }\r\n        }\r\n        setList(data);\r\n\r\n    }, []);\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n        setUserDetails({...userDetails, [name]: value});\r\n    }\r\n    const validate = (name, value) => {\r\n        const emailRegx = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/ig;\r\n        const numRegx = /^\\d{1,6}(?:\\.\\d{0,2})?$/g;\r\n        switch (name) {\r\n            case 'firstName':\r\n                if (!value) return \"First Name is required\";\r\n                return null;\r\n            case 'lastName':\r\n                if (!value) return \"Last Name is required\";\r\n                return null;\r\n            case 'email':\r\n                if (!emailRegx.test(value)) return \"Email is required\";\r\n                return null;\r\n            case 'age':\r\n                if (!numRegx.test(value)) return \"Age is required\";\r\n                return null;\r\n            case 'address':\r\n                if (!value) return \"Address is required\";\r\n                return null;\r\n            case 'gender':\r\n                if (!value) return \"Gender is required\";\r\n                return null;\r\n            case 'country':\r\n                if (!value) return \"Country is required\";\r\n                return null;\r\n            case 'password':\r\n                if (!value >= 6) return \"Password is required\";\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        let errorsObj = {}\r\n        const newUserDetails = {\r\n            firstName: userDetails.firstName,\r\n            lastName: userDetails.lastName,\r\n            email: userDetails.email,\r\n            age: userDetails.age,\r\n            address: userDetails.address,\r\n            gender: userDetails.gender,\r\n            country: userDetails.country,\r\n            password: userDetails.password,\r\n            // conformPassword: userDetails.conformPassword\r\n        }\r\n        Object.keys(newUserDetails).forEach((key) => {\r\n            const error = validate(key, newUserDetails[key]);\r\n            if (error && error.length) {\r\n                errorsObj[key] = error;\r\n            }\r\n        });\r\n        if (Object.keys(errorsObj).length > 0) {\r\n            return setValidation(errorsObj);\r\n        } else {\r\n            console.log(props.match.params.id);\r\n            if (props.match.params.id !== undefined) {\r\n                let index = list.findIndex(item => item.id == props.match.params.id);\r\n                list[index] = userDetails;\r\n                history.push(\"/user\");\r\n\r\n            } else {\r\n                userDetails.id = list.length + 1;\r\n                list.push(userDetails);\r\n                history.push(\"/login\");\r\n            }\r\n            localStorage.setItem(\"list\", JSON.stringify(list));\r\n            setList(list);\r\n            setValidation({});\r\n            setEditableIndex(props.match.params.id);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={8}/>\r\n                <Col span={8}>\r\n                    <Card className=\"card_formate mt-lg-5\">\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Input name=\"firstName\" placeholder=\"Please Input Your First Name!\"\r\n                                       value={userDetails.firstName}\r\n                                       addonBefore={<UserOutlined/>} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.firstName || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"lastName\" placeholder=\"Please Input Your Lastname!\"\r\n                                       value={userDetails.lastName}\r\n                                       addonBefore={<UserOutlined/>} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.lastName || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Please Input Your email!\"\r\n                                       value={userDetails.email}\r\n                                       addonBefore={<MailOutlined/>} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.email}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"age\" placeholder=\"Please Input Your Age!\" value={userDetails.age}\r\n                                       addonBefore={<UserOutlined/>}\r\n                                       onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.age || \"\"}</span>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <TextArea rows={4} name=\"address\" placeholder=\"Please Input Your Address!\"\r\n                                          value={userDetails.address}\r\n                                          onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.address}</span>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Radio.Group name=\"gender\" onChange={e => handleChange({\r\n                                    target: {\r\n                                        name: \"gender\",\r\n                                        value: e.target.value\r\n                                    }\r\n                                })}\r\n                                             value={userDetails.gender || \"\"}>\r\n                                    <Radio value=\"Male\">Male</Radio>\r\n                                    <Radio value=\"Female\">Female</Radio>\r\n                                    <Radio value=\"Other\">Other</Radio>\r\n                                </Radio.Group>\r\n                                <span className=\"text-danger\">{errors.gender || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Select\r\n                                    className=\"select-type\"\r\n                                    allowClear\r\n                                    placeholder=\"Please select your country\"\r\n                                    style={{width: '100%'}}\r\n                                    value={userDetails.country}\r\n                                    onChange={value => handleChange({target: {name: \"country\", value}})}\r\n                                >\r\n                                    {\r\n                                        numOfCountries.map((numOfCountry, index) =>\r\n                                            <Option key={index}\r\n                                                    value={numOfCountry.value}>{numOfCountry.label}</Option>\r\n                                        )\r\n                                    }\r\n                                </Select>\r\n                                <span className=\"text-danger\">{errors.country || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Password name=\"password\" addonBefore={<LockOutlined/>}\r\n                                                value={userDetails.password || \"\"} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.password || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n                                    Sign Up\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}/>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nexport default SignUp;","C:\\Projects\\second_project\\src\\User.js",["47","48"],"C:\\Projects\\second_project\\src\\Login.js",["49","50"],"C:\\Projects\\second_project\\src\\Edit.js",[],"C:\\Projects\\second_project\\src\\userDashBord.js",["51","52","53","54"],"C:\\Projects\\second_project\\src\\PrivateRouter.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":30,"nodeType":"63","messageId":"64","endLine":2,"endColumn":38},{"ruleId":"61","severity":1,"message":"65","line":2,"column":56,"nodeType":"63","messageId":"64","endLine":2,"endColumn":60},{"ruleId":"61","severity":1,"message":"66","line":19,"column":12,"nodeType":"63","messageId":"64","endLine":19,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":36,"column":8,"nodeType":"69","endLine":36,"endColumn":10,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":43,"column":33,"nodeType":"73","messageId":"74","endLine":43,"endColumn":34,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":99,"column":60,"nodeType":"78","messageId":"79","endLine":99,"endColumn":62},{"ruleId":"61","severity":1,"message":"80","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":14},{"ruleId":"61","severity":1,"message":"81","line":7,"column":16,"nodeType":"63","messageId":"64","endLine":7,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":2,"column":31,"nodeType":"63","messageId":"64","endLine":2,"endColumn":39},{"ruleId":"61","severity":1,"message":"65","line":2,"column":57,"nodeType":"63","messageId":"64","endLine":2,"endColumn":61},{"ruleId":"61","severity":1,"message":"82","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"83","line":2,"column":15,"nodeType":"63","messageId":"64","endLine":2,"endColumn":21},{"ruleId":"61","severity":1,"message":"84","line":7,"column":5,"nodeType":"63","messageId":"64","endLine":7,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":43,"column":62,"nodeType":"87","endLine":43,"endColumn":77},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'isEditable' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["91","92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'CalendarOutlined' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"messageId":"95","fix":"96","desc":"97"},{"messageId":"98","fix":"99","desc":"100"},"Update the dependencies array to be: [props.match.params.id]",{"range":"101","text":"102"},"removeEscape",{"range":"103","text":"104"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"105","text":"106"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1360,1362],"[props.match.params.id]",[1588,1589],"",[1588,1588],"\\"]