[{"C:\\Projects\\second_project\\src\\App.js":"1","C:\\Projects\\second_project\\src\\index.js":"2","C:\\Projects\\second_project\\src\\SignUp.js":"3","C:\\Projects\\second_project\\src\\User.js":"4","C:\\Projects\\second_project\\src\\Login.js":"5","C:\\Projects\\second_project\\src\\Edit.js":"6","C:\\Projects\\second_project\\src\\userDashBord.js":"7","C:\\Projects\\second_project\\src\\PrivateRouter.js":"8","C:\\Projects\\second_project\\src\\api_demo.js":"9"},{"size":996,"mtime":1607604158062,"results":"10","hashOfConfig":"11"},{"size":433,"mtime":1606980029811,"results":"12","hashOfConfig":"11"},{"size":9331,"mtime":1607340157374,"results":"13","hashOfConfig":"11"},{"size":7101,"mtime":1607337956279,"results":"14","hashOfConfig":"11"},{"size":3015,"mtime":1607172854404,"results":"15","hashOfConfig":"11"},{"size":147,"mtime":1606979792168,"results":"16","hashOfConfig":"11"},{"size":3348,"mtime":1607171710215,"results":"17","hashOfConfig":"11"},{"size":578,"mtime":1607169211784,"results":"18","hashOfConfig":"11"},{"size":5936,"mtime":1607666172068,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aeuhq7",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\second_project\\src\\App.js",[],"C:\\Projects\\second_project\\src\\index.js",[],["46","47"],"C:\\Projects\\second_project\\src\\SignUp.js",["48","49","50","51","52"],"import React, {useEffect, useState} from 'react';\r\nimport {Form, Input, Button, Checkbox, Row, Col, Card, Icon, Radio, Select} from 'antd';\r\nimport {UserOutlined, LockOutlined, MailOutlined} from '@ant-design/icons';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\nconst numOfCountries = [\r\n    // {value: \"\", label: \"Please Select...\"},\r\n    {value: \"India\", label: \"India\"},\r\n    {value: \"America\", label: \"America\"},\r\n    {value: \"Nepal\", label: \"Nepal\"},\r\n    {value: \"Africa\", label: \"Africa\"},\r\n    {value: \"Pakistan\", label: \"Pakistan\"},\r\n];\r\nconst SignUp = (props) => {\r\n    const [userDetails, setUserDetails] = useState({});\r\n    const [list, setList] = useState([]);\r\n    // const [isEditable, setEditableIndex] = useState(null);\r\n    const [errors, setValidation] = React.useState({});\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        if (JSON.parse(localStorage.getItem(\"list\")) !== null) {\r\n            data = JSON.parse(localStorage.getItem(\"list\"));\r\n            if (props.match.params.id) {\r\n                const findUser = data.find(user => user.id === parseInt(props.match.params.id));\r\n                if (findUser) {\r\n                    setUserDetails(findUser);\r\n                }\r\n            }\r\n        }\r\n        setList(data);\r\n\r\n    }, []);\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n        setUserDetails({...userDetails, [name]: value});\r\n    }\r\n    const validate = (name, value) => {\r\n        const emailRegx = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/ig;\r\n        const numRegx = /^\\d{1,6}(?:\\.\\d{0,2})?$/g;\r\n        switch (name) {\r\n            case 'firstName':\r\n                if (!value) return \"First Name is required\";\r\n                return null;\r\n            case 'lastName':\r\n                if (!value) return \"Last Name is required\";\r\n                return null;\r\n            case 'email':\r\n                if (!emailRegx.test(value)) return \"Email is required\";\r\n                return null;\r\n            case 'age':\r\n                if (!numRegx.test(value)) return \"Age is required\";\r\n                return null;\r\n            case 'address':\r\n                if (!value) return \"Address is required\";\r\n                return null;\r\n            case 'gender':\r\n                if (!value) return \"Gender is required\";\r\n                return null;\r\n            case 'country':\r\n                if (!value) return \"Country is required\";\r\n                return null;\r\n            case 'password':\r\n                if (!value >= 6) return \"Password is required\";\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        let errorsObj = {}\r\n        const newUserDetails = {\r\n            firstName: userDetails.firstName,\r\n            lastName: userDetails.lastName,\r\n            email: userDetails.email,\r\n            age: userDetails.age,\r\n            address: userDetails.address,\r\n            gender: userDetails.gender,\r\n            country: userDetails.country,\r\n            password: userDetails.password,\r\n            // conformPassword: userDetails.conformPassword\r\n        }\r\n        Object.keys(newUserDetails).forEach((key) => {\r\n            const error = validate(key, newUserDetails[key]);\r\n            if (error && error.length) {\r\n                errorsObj[key] = error;\r\n            }\r\n        });\r\n        if (Object.keys(errorsObj).length > 0) {\r\n            return setValidation(errorsObj);\r\n        } else {\r\n            console.log(props.match.params.id);\r\n            if (props.match.params.id !== undefined) {\r\n                let index = list.findIndex(item => item.id == props.match.params.id);\r\n                list[index] = userDetails;\r\n                history.push(\"/user\");\r\n\r\n            } else {\r\n                userDetails.id = list.length + 1;\r\n                list.push(userDetails);\r\n                history.push(\"/login\");\r\n            }\r\n            localStorage.setItem(\"list\", JSON.stringify(list));\r\n            setList(list);\r\n            setValidation({});\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={8}/>\r\n                <Col span={8}>\r\n                    <Card className=\"card_formate mt-lg-5\">\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Input name=\"firstName\" placeholder=\"Please Input Your First Name!\"\r\n                                       value={userDetails.firstName}\r\n                                       addonBefore={<UserOutlined/>} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.firstName || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"lastName\" placeholder=\"Please Input Your Lastname!\"\r\n                                       value={userDetails.lastName}\r\n                                       addonBefore={<UserOutlined/>} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.lastName || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"email\" type=\"email\" placeholder=\"Please Input Your email!\"\r\n                                       value={userDetails.email}\r\n                                       addonBefore={<MailOutlined/>} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.email}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"age\" placeholder=\"Please Input Your Age!\" value={userDetails.age}\r\n                                       addonBefore={<UserOutlined/>}\r\n                                       onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.age || \"\"}</span>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <TextArea rows={4} name=\"address\" placeholder=\"Please Input Your Address!\"\r\n                                          value={userDetails.address}\r\n                                          onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.address}</span>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Radio.Group name=\"gender\" onChange={e => handleChange({\r\n                                    target: {\r\n                                        name: \"gender\",\r\n                                        value: e.target.value\r\n                                    }\r\n                                })}\r\n                                             value={userDetails.gender || \"\"}>\r\n                                    <Radio value=\"Male\">Male</Radio>\r\n                                    <Radio value=\"Female\">Female</Radio>\r\n                                    <Radio value=\"Other\">Other</Radio>\r\n                                </Radio.Group>\r\n                                <span className=\"text-danger\">{errors.gender || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Select\r\n                                    className=\"select-type\"\r\n                                    allowClear\r\n                                    placeholder=\"Please select your country\"\r\n                                    style={{width: '100%'}}\r\n                                    value={userDetails.country}\r\n                                    onChange={value => handleChange({target: {name: \"country\", value}})}\r\n                                >\r\n                                    {\r\n                                        numOfCountries.map((numOfCountry, index) =>\r\n                                            <Option key={index}\r\n                                                    value={numOfCountry.value}>{numOfCountry.label}</Option>\r\n                                        )\r\n                                    }\r\n                                </Select>\r\n                                <span className=\"text-danger\">{errors.country || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Password name=\"password\" addonBefore={<LockOutlined/>}\r\n                                                value={userDetails.password || \"\"} onChange={handleChange}/>\r\n                                <span className=\"text-danger\">{errors.password || \"\"}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n                                Sign Up\r\n                            </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}/>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nexport default SignUp;",["53","54"],"C:\\Projects\\second_project\\src\\User.js",["55","56"],"import React, {useEffect, useState} from 'react';\r\nimport {Popconfirm, Button, message, Row, Col, Input} from 'antd';\r\nimport { DeleteOutlined, EditOutlined, SearchOutlined} from '@ant-design/icons';\r\nimport Table from \"antd/lib/table\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst {Column, ColumnGroup} = Table;\r\nconst { Search } = Input;\r\n\r\nconst User = (props) => {\r\n    const [searchDetails, setSearchDetails] = useState({\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email:\"\",\r\n        age:\"\",\r\n        gender:\"\"\r\n    });\r\n    const [list, setList] = useState([]);\r\n    const history = useHistory();\r\n    const [searchDuplicate, setSearchDuplicate] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        if (JSON.parse(localStorage.getItem(\"list\")) !== null) {\r\n            data = JSON.parse(localStorage.getItem(\"list\"));\r\n        }\r\n        setList(data);\r\n        setSearchDuplicate(data);\r\n\r\n    }, []);\r\n\r\n    const onEdit = (record) => {\r\n        history.push(`/edit/${record.id}`);\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        if (message.success(\"Your record is delete!!\")) {\r\n            const filterData = list.filter(user => user.id !== id);\r\n            localStorage.setItem(\"list\", JSON.stringify(filterData));\r\n            setList(filterData);\r\n        }\r\n\r\n    }\r\n\r\n    const onLogOut = () => {\r\n        history.push(\"/login\");\r\n        localStorage.setItem(\"token\",\"\");\r\n    }\r\n    const onNewData = () => {\r\n        history.push(\"/signup\");\r\n    }\r\n\r\n    const onChange = e =>{\r\n        const {name,value} = e.target;\r\n        setSearchDetails({...searchDetails,[name]: value});\r\n    }\r\n    const onSearch = () => {\r\n        let searchValue = searchDetails;\r\n        let row = searchDuplicate || [];\r\n        if (searchValue.firstName) {\r\n            row = row.filter(value => value.firstName.toLowerCase().includes(searchValue.firstName.toLowerCase()));\r\n        }\r\n        if (searchValue.lastName) {\r\n            row = row.filter(value => value.lastName.toLowerCase().includes(searchValue.lastName.toLowerCase()));\r\n        }\r\n        if (searchValue.email) {\r\n            row = row.filter(value => value.email.toLowerCase().includes(searchValue.email.toLowerCase()));\r\n        }\r\n        if (searchValue.age) {\r\n            row = row.filter(value => value.age.toString().toLowerCase().includes(searchValue.age.toLowerCase()));\r\n        }\r\n        if (searchValue.gender) {\r\n            row = row.filter(value => value.gender.toLowerCase() === searchValue.gender.toLowerCase());\r\n        }\r\n        setList(row);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Id',\r\n            dataIndex: 'id',\r\n            key: 'id'\r\n        },\r\n        {\r\n            title: 'First Name',\r\n            width: 120,\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            width: 100,\r\n            dataIndex: 'lastName',\r\n            key: 'lastName',\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            width: 100,\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Age',\r\n            width: 100,\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Gender',\r\n            width: 100,\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Country',\r\n            width: 100,\r\n            dataIndex: 'country',\r\n            key: 'country',\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            render: (text, record) => {\r\n                return (\r\n                    <div>\r\n                        <Button primary onClick={() => {\r\n                            onEdit(record)\r\n                        }}><EditOutlined/></Button>\r\n                        &nbsp;&nbsp;\r\n                        <Popconfirm placement=\"bottom\" title=\"Are you sure to delete this record?\" onConfirm={() => {\r\n                            onDelete(text)\r\n                        }} okText=\"Yes\" cancelText=\"No\">\r\n                            <Button danger><DeleteOutlined/></Button>\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={6}/>\r\n                <Col span={12} className=\"mt-3\">\r\n\r\n                    <div className=\"header-data\">\r\n                        <h1>Users</h1>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={onNewData}>\r\n                            Add New\r\n                        </Button>&nbsp;&nbsp;\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={onLogOut}>\r\n                            Log Out\r\n                        </Button>\r\n                    </div><br/><br/>\r\n                    <Row>\r\n                        <Col span={4}>\r\n                            <label>FirstName</label>\r\n                            <Search placeholder=\"input search text\" name=\"firstName\" value={searchDetails.firstName} onChange={onChange} />\r\n                        </Col>&nbsp;&nbsp;\r\n                        <Col span={4}>\r\n                            <label>LastName</label>\r\n                            <Search placeholder=\"input search text\" name=\"lastName\" value={searchDetails.lastName} onChange={onChange} />\r\n                        </Col>&nbsp;&nbsp;\r\n                        <Col span={4}>\r\n                            <label>Email</label>\r\n                            <Search placeholder=\"input search text\" name=\"email\" value={searchDetails.email} onChange={onChange} />\r\n                        </Col>&nbsp;&nbsp;\r\n                        <Col span={4}>\r\n                            <label>Age</label>\r\n                            <Search placeholder=\"input search text\" name=\"age\" value={searchDetails.age} onChange={onChange} />\r\n                        </Col>&nbsp;&nbsp;\r\n                        <Col span={4}>\r\n                            <label>Gender</label>\r\n                            <Search placeholder=\"input search text\" name=\"gender\" value={searchDetails.gender} onChange={onChange} />\r\n                        </Col>&nbsp;&nbsp;\r\n                        <Col span={2}>\r\n                            <Button type=\"primary\" icon={<SearchOutlined />} className=\"btn-search\" onClick={onSearch}>\r\n                                Search\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table\r\n                    columns={columns}\r\n                    dataSource={list}\r\n                    pagination={{pageSize: 10}}\r\n                    rowKey={'key'}\r\n                >\r\n                </Table>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nexport default User;",["57","58"],"C:\\Projects\\second_project\\src\\Login.js",["59","60"],"import React, {useEffect, useState} from 'react';\r\nimport { Form, Input, Button, Checkbox, Row, Col, Card, Icon, message } from 'antd';\r\nimport { UserOutlined,LockOutlined } from '@ant-design/icons';\r\nimport {useHistory} from 'react-router-dom';\r\nconst Login = (props) =>{\r\n\r\n    const [loginData,setLoginData] = useState({});\r\n    const [list, setList] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        if (JSON.parse(localStorage.getItem(\"list\")) !== null) {\r\n            data = JSON.parse(localStorage.getItem(\"list\"));\r\n        }\r\n        setList(data);\r\n\r\n    }, []);\r\n\r\n    const handleChange = (event) =>{\r\n       const {name, value} = event.target;\r\n        setLoginData({...loginData,[name]: value});\r\n    }\r\n\r\n    const onLogin = () =>{\r\n        const findLoginUser = list.find(user => user.email === loginData.email && user.password === loginData.password);\r\n\r\n        if(findLoginUser){\r\n            if(message.success(\"Login Successfully\")){\r\n                history.push(\"/userDashBord\");\r\n                localStorage.setItem(\"token\",findLoginUser.email);\r\n            }\r\n        }else{\r\n            message.error(\"Please Enter Valid Data..\");\r\n        }\r\n    }\r\n\r\n   const onRegister = () =>{\r\n      history.push(\"/signup\");\r\n   }\r\n    return(\r\n        <>\r\n            <Row style={{marginTop: 250}}>\r\n                <Col span={8}/>\r\n                <Col span={4}>\r\n                    <Card bordered={false} className=\"login_card\">\r\n                        <h2>Login</h2>\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Input name=\"email\" placeholder=\"Please Input Your Username!\" autoSave=\"false\"  value={loginData.email || \"\"} onChange={handleChange} addonBefore={<UserOutlined />}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item name=\"passWord\">\r\n                                <Input.Password name=\"password\" placeholder=\"Please Input Your Password!\" autoSave=\"false\" value={loginData.password || \"\"}  onChange={handleChange} addonBefore={<LockOutlined />}/>\r\n                            </Form.Item>\r\n                            <Button type=\"primary\" onClick={onLogin} >Login</Button>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Card bordered={false} className=\"register_card\">\r\n                        <h2 className=\"heading2\">Sign Up</h2>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\r\n                            labore et dolore magna aliqua.</p><br />\r\n                        <Button type=\"primary\" onClick={onRegister} >\r\n                            Register Now!\r\n                        </Button>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}></Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\nexport default Login;","C:\\Projects\\second_project\\src\\Edit.js",[],"C:\\Projects\\second_project\\src\\userDashBord.js",["61","62","63","64"],"import React, {useState} from 'react';\r\nimport {Menu, Switch, Divider, Row, Col, Button} from 'antd';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    MailOutlined,\r\n    CalendarOutlined,\r\n    AppstoreOutlined,\r\n    SettingOutlined,\r\n    LinkOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nconst UserDashBord = () => {\r\n    const history = useHistory();\r\n    const onShowUser = () =>{\r\n        history.push(\"/user\");\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col span={4}>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Menu\r\n                            defaultSelectedKeys={['1']}\r\n                            defaultOpenKeys={['sub1']}\r\n                        >\r\n                            <Menu.Item key=\"1\" icon={<MailOutlined/>}>\r\n                                Introduction\r\n                            </Menu.Item>\r\n                            <SubMenu key=\"sub1\" icon={<AppstoreOutlined/>} title=\"Functionality\">\r\n                                <Menu.Item key=\"generalFunctionality\">General Functionality</Menu.Item>\r\n                                <Menu.Item key=\"advancedFunctionality\">Advanced Functionality</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu key=\"sub2\" icon={<SettingOutlined/>} title=\"Settings\">\r\n                                <Menu.Item key=\"InstallSettings\">Install Settings</Menu.Item>\r\n                                <Menu.Item key=\"ImportSettings\">Import Settings</Menu.Item>\r\n                                <Menu.Item key=\"Default Settings\">Default Settings</Menu.Item>\r\n                            </SubMenu>\r\n                            <Menu.Item key=\"link\" icon={<LinkOutlined/>}>\r\n                                <a href=\"https://ant.design\" target=\"_blank\" rel=\"target\">\r\n                                    Ant Design\r\n                                </a>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Col>\r\n                    <Col span={16}>\r\n                        <Menu mode=\"horizontal\" className=\"mt-2\">\r\n                            <Menu.Item key=\"mail\">\r\n                                Dashboard\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"mail\">\r\n                                Users\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"app\">\r\n                                Settings\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"alipay\">\r\n                                <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    Navigation Four - Link\r\n                                </a>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"alipay\">\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={onShowUser}>\r\n                                    Show Data\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default UserDashBord;","C:\\Projects\\second_project\\src\\PrivateRouter.js",[],["65","66"],"C:\\Projects\\second_project\\src\\api_demo.js",["67","68","69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":30,"nodeType":"77","messageId":"78","endLine":2,"endColumn":38},{"ruleId":"75","severity":1,"message":"79","line":2,"column":56,"nodeType":"77","messageId":"78","endLine":2,"endColumn":60},{"ruleId":"80","severity":1,"message":"81","line":36,"column":8,"nodeType":"82","endLine":36,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":43,"column":33,"nodeType":"86","messageId":"87","endLine":43,"endColumn":34,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":99,"column":60,"nodeType":"91","messageId":"92","endLine":99,"endColumn":62},{"ruleId":"71","replacedBy":"93"},{"ruleId":"73","replacedBy":"94"},{"ruleId":"75","severity":1,"message":"95","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":14},{"ruleId":"75","severity":1,"message":"96","line":7,"column":16,"nodeType":"77","messageId":"78","endLine":7,"endColumn":27},{"ruleId":"71","replacedBy":"97"},{"ruleId":"73","replacedBy":"98"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":31,"nodeType":"77","messageId":"78","endLine":2,"endColumn":39},{"ruleId":"75","severity":1,"message":"79","line":2,"column":57,"nodeType":"77","messageId":"78","endLine":2,"endColumn":61},{"ruleId":"75","severity":1,"message":"99","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":24},{"ruleId":"75","severity":1,"message":"100","line":2,"column":15,"nodeType":"77","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"75","severity":1,"message":"101","line":7,"column":5,"nodeType":"77","messageId":"78","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":43,"column":62,"nodeType":"104","endLine":43,"endColumn":77},{"ruleId":"71","replacedBy":"105"},{"ruleId":"73","replacedBy":"106"},{"ruleId":"75","severity":1,"message":"107","line":4,"column":9,"nodeType":"77","messageId":"78","endLine":4,"endColumn":23},{"ruleId":"75","severity":1,"message":"108","line":4,"column":25,"nodeType":"77","messageId":"78","endLine":4,"endColumn":37},{"ruleId":"75","severity":1,"message":"109","line":4,"column":53,"nodeType":"77","messageId":"78","endLine":4,"endColumn":65},{"ruleId":"75","severity":1,"message":"110","line":6,"column":9,"nodeType":"77","messageId":"78","endLine":6,"endColumn":19},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["114","115"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["111"],["112"],"'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.",["111"],["112"],"'useState' is defined but never used.","'Switch' is defined but never used.","'CalendarOutlined' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["111"],["112"],"'DeleteOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"messageId":"118","fix":"119","desc":"120"},{"messageId":"121","fix":"122","desc":"123"},"Update the dependencies array to be: [props.match.params.id]",{"range":"124","text":"125"},"removeEscape",{"range":"126","text":"127"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"128","text":"129"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1363,1365],"[props.match.params.id]",[1591,1592],"",[1591,1591],"\\"]